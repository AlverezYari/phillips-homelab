apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: zot-registry
  namespace: argocd
spec:
  project: default

  source:
    repoURL: https://github.com/AlverezYari/fork-zot-helm-chart
    targetRevision: main
    path: charts/zot
    helm:
      values: |
        replicaCount: 1

        image:
          repository: ghcr.io/project-zot/zot-linux-amd64
          tag: "v2.1.2"
          pullPolicy: IfNotPresent

        persistence: true
        pvc:
          create: true
          accessModes: ["ReadWriteOnce"]
          storageClassName: syno-iscsi-default
          storage: 200Gi

        mountConfig: true
        mountSecret: true
        existingSecret: zot-auth

        configFiles:
          config.json: |-
            {
              "storage": {
                "rootDirectory": "/var/lib/registry",
                "dedupe": true,
                "gc": true,
                "gcDelay": "1h",
                "gcInterval": "24h"
              },
              "http": {
                "address": "0.0.0.0",
                "port": "5000",
                "auth": {
                  "htpasswd": {
                    "path": "/secret/htpasswd"
                  }
                },
                "accessControl": {
                  "repositories": {
                    "**": {
                      "policies": [
                        { "users": ["admin"], "actions": ["read","create","update","delete"] }
                      ],
                      "defaultPolicy": ["read"],
                      "anonymousPolicy": ["read"]
                    },
                    "dev/**": {
                      "policies": [
                        { "users": ["admin","cicd","developer"], "actions": ["read","create","update","delete"] }
                      ],
                      "defaultPolicy": []
                    },
                    "prod/**": {
                      "policies": [
                        { "users": ["admin","cicd"], "actions": ["read","create","update","delete"] },
                        { "users": ["developer"], "actions": ["read"] }
                      ],
                      "defaultPolicy": []
                    }
                  },
                  "adminPolicy": {
                    "users": ["admin"],
                    "actions": ["read","create","update","delete"]
                  }
                }
              },
              "log": { "level": "debug" }
            }

        service:
          type: ClusterIP
          port: 5000

        fullnameOverride: zot-registry

        # probes use plain GET /v2/ (no header required)
        startupProbe:
          httpGet:
            path: /v2/
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /v2/
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /v2/
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 3

        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 512Mi

  destination:
    server: https://kubernetes.default.svc
    namespace: zot

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true

